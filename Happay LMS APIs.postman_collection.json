{
	"info": {
		"_postman_id": "14e5fae4-cbed-40d7-a400-b06bbbec1e1d",
		"name": "Happay LMS APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "User Registration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable('username', jsonData.data.username);",
									"postman.setEnvironmentVariable('password', 'password');",
									"pm.test(\"Status Code Test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{$randomUserName}}\",\n    \"email\": \"{{$randomExampleEmail}}\",\n    \"password\": \"password\",\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/register/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable('auth_token', jsonData.data.token);",
									"pm.test(\"Status Code Test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Book Store",
			"item": [
				{
					"name": "Create an Author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable('author_id', jsonData.data.pk);",
									"pm.test(\"Status Code Test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{$randomFullName}}\",\n    \"phone_number\": \"+919677923800\",\n    \"birth_date\": \"1980-03-22\",\n    \"death_date\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/book-store/authors/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"book-store",
								"authors",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Individual Author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code Test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/book-store/authors/{{author_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"book-store",
								"authors",
								"{{author_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Authors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code Test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/book-store/authors/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"book-store",
								"authors",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable('category_id', jsonData.data.pk);",
									"pm.test(\"Status Code Test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{$randomCatchPhraseAdjective}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/book-store/categories/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"book-store",
								"categories",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Individual Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code Test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/book-store/categories/{{category_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"book-store",
								"categories",
								"{{category_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code Test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/book-store/categories/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"book-store",
								"categories",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a Book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code Test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"{{$randomCompanyName}}\",\n    \"author_id\": \"{{author_id}}\",\n    \"category_id\": \"{{category_id}}\",\n    \"publisher_name\": \"Square Publications\",\n    \"published_date\": \"2022-01-02\",\n    \"price\": {{$randomPrice}},\n    \"units_sold\": {{$randomInt}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/book-store/books/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"book-store",
								"books",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all books by category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code Test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/book-store/books/search/?category_id={{category_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"book-store",
								"books",
								"search",
								""
							],
							"query": [
								{
									"key": "category_id",
									"value": "{{category_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get most sold book by category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code Test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/book-store/books/search/?category_id={{category_id}}&most_sold=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"book-store",
								"books",
								"search",
								""
							],
							"query": [
								{
									"key": "category_id",
									"value": "{{category_id}}"
								},
								{
									"key": "most_sold",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all books by author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code Test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/book-store/books/search/?author_id={{author_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"book-store",
								"books",
								"search",
								""
							],
							"query": [
								{
									"key": "author_id",
									"value": "{{author_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get most sold book by author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code Test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/book-store/books/search/?author_id={{author_id}}&most_sold=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"book-store",
								"books",
								"search",
								""
							],
							"query": [
								{
									"key": "author_id",
									"value": "{{author_id}}"
								},
								{
									"key": "most_sold",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all books based on author and category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code Test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/book-store/books/search/?author_id={{author_id}}&category_id={{category_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"book-store",
								"books",
								"search",
								""
							],
							"query": [
								{
									"key": "author_id",
									"value": "{{author_id}}"
								},
								{
									"key": "category_id",
									"value": "{{category_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search books based on author, category and author name or book name or both",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code Test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/book-store/books/search/?author_id={{author_id}}&category_id={{category_id}}&query_text=rowe",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"book-store",
								"books",
								"search",
								""
							],
							"query": [
								{
									"key": "author_id",
									"value": "{{author_id}}"
								},
								{
									"key": "category_id",
									"value": "{{category_id}}"
								},
								{
									"key": "query_text",
									"value": "rowe"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search book based on book name or author name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code Test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/book-store/books/search/?query_text=hello",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"book-store",
								"books",
								"search",
								""
							],
							"query": [
								{
									"key": "query_text",
									"value": "hello"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "apikey",
				"apikey": [
					{
						"key": "value",
						"value": "Token {{auth_token}}",
						"type": "string"
					},
					{
						"key": "key",
						"value": "Authorization",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}